{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "276ac7a8-0b7c-4fcc-a27d-fb4530f38d3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import networkx as nx\n",
    "\n",
    "def graph(path):\n",
    "    Y = nx.read_edgelist(path=path, create_using=nx.DiGraph(), nodetype=int)\n",
    "    return Y\n",
    "\n",
    "medium_graph = graph(r\"C:\\Users\\kenne\\Downloads\\medium.tsv\")\n",
    "large_graph = graph(r\"C:\\Users\\kenne\\Downloads\\large.tsv\")\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bb573b42-c960-4a03-95e5-8d189f25b010",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'DiGraph with 27927 nodes and 242928 edges'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#ex 2.1 and 2.2\n",
    "nx.info(large_graph)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "760bfa68-e6c9-44e7-8de9-96453c827d27",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "nx.info(medium_graph)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d4d13ee9-6791-413a-8700-50e604ca7c64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2606"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#ex 2.1\n",
    "len(medium_graph.nodes())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "ca9bdad2-06dc-461c-935f-410539191fa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3285"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #Ex 2.2\n",
    "    len(medium_graph.edges())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "652d710b-f022-43b7-8785-b5dbbcf1153b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([2.156e+03, 2.560e+02, 8.600e+01, 3.500e+01, 2.100e+01, 3.400e+01,\n",
       "        1.000e+01, 4.000e+00, 3.000e+00, 1.000e+00]),\n",
       " array([ 1. ,  3.8,  6.6,  9.4, 12.2, 15. , 17.8, 20.6, 23.4, 26.2, 29. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.hist([v for k, v in nx.degree(medium_graph)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "46307cc0-1e3c-4526-b44b-d98d7f84b855",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "medium_graph.out_degree(146678)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1fe1d957-78cf-4bb2-83c4-3e64d4b772bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#ex 2.3\n",
    "#indegree outdegree for medium_graph #https://stackoverflow.com/questions/53958700/plotting-the-degree-distribution-of-a-graph-using-nx-degree-histogram\n",
    "\n",
    "import networkx as nx\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def plot_degree_dist(medium_graph):\n",
    "    degrees = [medium_graph.degree(n) for n in medium_graph.nodes()]\n",
    "    plt.hist(degrees)\n",
    "    plt.show()\n",
    "\n",
    "plot_degree_dist(nx.gnp_random_graph(100, 0.5, directed=True))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8e454744-b563-408e-82ff-b6aded6f298e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#ex 2.3\n",
    "#indegree outdegree for large_graph\n",
    "\n",
    "import networkx as nx\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def plot_degree_dist(large_graph):\n",
    "    degrees = [large_graph.degree(n) for n in large_graph.nodes()]\n",
    "    plt.hist(degrees)\n",
    "    plt.show()\n",
    "\n",
    "plot_degree_dist(nx.gnp_random_graph(100, 0.5, directed=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6c7e525f-4b45-4870-b9ec-31daac46119e",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#ex 2.4.1\n",
    "#medium_graph weakly connected \n",
    "G= nx.path_graph(2, create_using=nx.DiGraph())\n",
    "\n",
    "nx.add_path(G, medium_graph)\n",
    "\n",
    "[\n",
    "\n",
    " (len(str(c)))\n",
    "\n",
    "    for c in max(nx.weakly_connected_components(medium_graph), key=len)\n",
    "\n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cb80c57a-1b40-401c-b243-b8390c975302",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "891\n"
     ]
    }
   ],
   "source": [
    "#2.4.2\n",
    "#largest weakly connected mediun_graph\n",
    "\n",
    "l = max(nx.weakly_connected_components(medium_graph), key=len)\n",
    "print(len(l))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "72effe4f-7754-42f5-9473-7fafc4b33a8c",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(147458, 856653), (485393, 856890), (485393, 601054), (526355, 794096), (526355, 754705), (526355, 633460), (526355, 860422), (526355, 797142), (526355, 701399), (526355, 871144), (526355, 921334), (526355, 751047), (526355, 859937), (157717, 863491), (802839, 862400), (802839, 858793), (802839, 860371), (32792, 296080), (32792, 142819), (32792, 870600), (32792, 148140), (32792, 492909), (32792, 856751), (32792, 262480), (32792, 784913), (32792, 862740), (32792, 864311), (32792, 856653), (151580, 858833), (151580, 721301), (14365, 157306), (14365, 859621), (831519, 866724), (831519, 862327), (831519, 868170), (831519, 933947), (831519, 857823), (315426, 645512), (315426, 504464), (315426, 792624), (63523, 688193), (63523, 857024), (63523, 311862), (868389, 870600), (475179, 857336), (116781, 870394), (116781, 832850), (116781, 202021), (116781, 650734), (157744, 632996), (157744, 858078), (157744, 645526), (157744, 860967), (157744, 857033), (157744, 625866), (864311, 870600), (675897, 864930), (837691, 861793), (837691, 856780), (837691, 868359), (688193, 857024), (4165, 4961), (4165, 310242), (4165, 142819), (4165, 296080), (4165, 148140), (4165, 492909), (4165, 856751), (4165, 262480), (4165, 784913), (4165, 862740), (4165, 32792), (4165, 856653), (829509, 837367), (632903, 866724), (632903, 868170), (632903, 831519), (632903, 857823), (473165, 864930), (153681, 862624), (153681, 863595), (153681, 665443), (114769, 641811), (114769, 856780), (114769, 934070), (632917, 858088), (632917, 863490), (632917, 760675), (632917, 795688), (843864, 857024), (843864, 859241), (843864, 859099), (843864, 859502), (309349, 471954), (309349, 859099), (309349, 862390), (309349, 857218), (309349, 784569), (309349, 367835), (309349, 324973), (278631, 309729), (278631, 397802), (278631, 644947), (278631, 633869), (278631, 834453), (157800, 313407), (157800, 883626), (157800, 480475), (157800, 471645), (157800, 832766), (157800, 866990), (4206, 858793), (4206, 784692), (645231, 933914), (645231, 857867), (645231, 761053), (4208, 861370), (839794, 862400), (839794, 863698), (839794, 870456), (839794, 842084), (839794, 857630), (854130, 857880), (333939, 485595), (479347, 837628), (862327, 869524), (862327, 868054), (858238, 859098), (839812, 863698), (612490, 797584), (860299, 864482), (860299, 866724), (860299, 863179), (858251, 868840), (858251, 858279), (309390, 857786), (309390, 851387), (153743, 790020), (153743, 871303), (153743, 858088), (153743, 864932), (153743, 856936), (149649, 157717), (684188, 864968), (684188, 863137), (684188, 752434), (684188, 858563), (866460, 871172), (133283, 232058), (632996, 645526), (632996, 860967), (632996, 857033), (632996, 858078), (858279, 864932), (858279, 868186), (155816, 857302), (155816, 203789), (155816, 158525), (155816, 858279), (155816, 868186), (229550, 473386), (229550, 480122), (229550, 480910), (833714, 860551), (635059, 865285), (784569, 857218), (784569, 859099), (784569, 862390), (153787, 867473), (153787, 157446), (153787, 865285), (153787, 870018), (153787, 633214), (862400, 870456), (862400, 863698), (862400, 863137), (858309, 871530), (858309, 861812), (321734, 859650), (858310, 860109), (55496, 739634), (55496, 480867), (55496, 759061), (55496, 592999), (55496, 133855), (205002, 864091), (24779, 858563), (637132, 843864), (159945, 646211), (159945, 473803), (159945, 473710), (581841, 857200), (860371, 862400), (860371, 866154), (147667, 159485), (147667, 785949), (485589, 857218), (485589, 856916), (485589, 857431), (485589, 863595), (751828, 754163), (860376, 892904), (860376, 863595), (153818, 863068), (485595, 632903), (127200, 232058), (127200, 133283), (479458, 843864), (479458, 637132), (864482, 866724), (757989, 842319), (641255, 868297), (557288, 833714), (80106, 154064), (80106, 312010), (147694, 861286), (147694, 860551), (147694, 753419), (147694, 860757), (147694, 865686), (147694, 871163), (860405, 863547), (159993, 857786), (159993, 422460), (248065, 868743), (248065, 485013), (248065, 480222), (248065, 854669), (317701, 868170), (860422, 864928), (860422, 864209), (860422, 932757), (860422, 921334), (860422, 871144), (831756, 856564), (784655, 867356), (80145, 863132), (874771, 888291), (749849, 860995), (749849, 869524), (749849, 856702), (749849, 862327), (31006, 158339), (26912, 860299), (26912, 866724), (26912, 148207), (311591, 859099), (473386, 857218), (473386, 482564), (473386, 632903), (473386, 868170), (473386, 866724), (473386, 634649), (473386, 831519), (473386, 857823), (268590, 633803), (268590, 634365), (268590, 450087), (160047, 751336), (160047, 858563), (860464, 864932), (860464, 865571), (860464, 866396), (645423, 645512), (739634, 759061), (317747, 860995), (784692, 858793), (784692, 786235), (844082, 853105), (33079, 856916), (33079, 757620), (33079, 857431), (635191, 785693), (473403, 859099), (657726, 862414), (760126, 867790), (477504, 870771), (477504, 507000), (477504, 858793), (477504, 868186), (477504, 866990), (321858, 485393), (321858, 480475), (321858, 856890), (321858, 601054), (321858, 565983), (760131, 856752), (760131, 861793), (760131, 863491), (760131, 834136), (760131, 860540), (760131, 856780), (760131, 866398), (760131, 862095), (317765, 846184), (866632, 870600), (313673, 858475), (41293, 665443), (41293, 318693), (41293, 158599), (41293, 840496), (41293, 869105), (41293, 112089), (641359, 705601), (641359, 747402), (262480, 296080), (262480, 784913), (262480, 862740), (262480, 492909), (262480, 856653), (262480, 856751), (145748, 319067), (313689, 480551), (69978, 859937), (69978, 797142), (69978, 860422), (69978, 751047), (69978, 871144), (69978, 794096), (69978, 754705), (69978, 526355), (69978, 633460), (69978, 481205), (69978, 701399), (69978, 921334), (24930, 450087), (24930, 633803), (24930, 268590), (24930, 634365), (842084, 862400), (842084, 870456), (842084, 863698), (842084, 857630), (149865, 862400), (149865, 581841), (149865, 857200), (149865, 450087), (6505, 868827), (858475, 858752), (858475, 863731), (858475, 859803), (858475, 863887), (858476, 865686), (471401, 645512), (471401, 477005), (643440, 857480), (643440, 760729), (393586, 859650), (20858, 866396), (862587, 867009), (860540, 861793), (156028, 892904), (156028, 827755), (156028, 856752), (156028, 860376), (156028, 856890), (156028, 863595), (473479, 869642), (473479, 866990), (645512, 863683), (645512, 795111), (156053, 857104), (156053, 443599), (645526, 857033), (645526, 858078), (645526, 860967), (156055, 859098), (633247, 797584), (633247, 785022), (862624, 863595), (866724, 868170), (117159, 857637), (790962, 840496), (790962, 854669), (790962, 856886), (8627, 866858), (8627, 148386), (8627, 863179), (135609, 863137), (108986, 829509), (151994, 829509), (850365, 859099), (600512, 835432), (600512, 871531), (600512, 721301), (858563, 864968), (858563, 863137), (858563, 858628), (858564, 933967), (858564, 859086), (858564, 867473), (152007, 484408), (152007, 477145), (152007, 786235), (592330, 866396), (592330, 859036), (698828, 844905), (4556, 151150), (154064, 312010), (797142, 871144), (797142, 859937), (797142, 857218), (797142, 921334), (797142, 860422), (20954, 632996), (20954, 64854), (20954, 860967), (20954, 857033), (20954, 625866), (20954, 157744), (20954, 645526), (20954, 107420), (20954, 858078), (868827, 870224), (309729, 644947), (309729, 397802), (309729, 338987), (309729, 633869), (309729, 834453), (795111, 869642), (795111, 863683), (397802, 644947), (397802, 633869), (397802, 834453), (238062, 698828), (752110, 867356), (752110, 784655), (154096, 870224), (858609, 870394), (856562, 857480), (856562, 857866), (856562, 862123), (856562, 857867), (856562, 856751), (856562, 860464), (856562, 867861), (319985, 860540), (856564, 858609), (856564, 857218), (856564, 859099), (319999, 853105), (147969, 858752), (147969, 756932), (147969, 319304), (147969, 857867), (147969, 154765), (147969, 863887), (147969, 746769), (147969, 858563), (147969, 159380), (147969, 158997), (147969, 857690), (147969, 858628), (147969, 857823), (147969, 757989), (147969, 316262), (147969, 858087), (147969, 858475), (147969, 148591), (147969, 857200), (147969, 790962), (147969, 863731), (147969, 858037), (147969, 856886), (147969, 159485), (147969, 856669), (147970, 152587), (858628, 868909), (313861, 871531), (313861, 837628), (156166, 296080), (322056, 857302), (74248, 156388), (74248, 857302), (248333, 319513), (248333, 751828), (784913, 862740), (784913, 856653), (784913, 856751), (158225, 856564), (158225, 831756), (158225, 858279), (862740, 864930), (154139, 323219), (154139, 832949), (154139, 785693), (127516, 862400), (127516, 149865), (311836, 856562), (121383, 797584), (59946, 638704), (59946, 857285), (59946, 384678), (121388, 827755), (311862, 688193), (311862, 857024), (311862, 864091), (311862, 444460), (322103, 755624), (322103, 680524), (154168, 840480), (154168, 857285), (154168, 856678), (154168, 857302), (154168, 856890), (700983, 862236), (21048, 443642), (21048, 158525), (422460, 857104), (422460, 857218), (152127, 857786), (152127, 309390), (862786, 863068), (680524, 858309), (856653, 862400), (856653, 863137), (856653, 857859), (856653, 862740), (856653, 857177), (856653, 856751), (311887, 417267), (311887, 622525), (860757, 871163), (860757, 865686), (834136, 861793), (834136, 869642), (834136, 866398), (834136, 862095), (860761, 866164), (309850, 479458), (309850, 314213), (309850, 857866), (309850, 637132), (309850, 646211), (309850, 700983), (309850, 843864), (309850, 862236), (856669, 858563), (856669, 858628), (856669, 868909), (856669, 857223), (471645, 883626), (471645, 480475), (471645, 832766), (471645, 866990), (856673, 857880), (856673, 857867), (856674, 857630), (856674, 856886), (858722, 863137), (858722, 862123), (309862, 843864), (309862, 859502), (309862, 647142), (856678, 858752), (856678, 863491), (856678, 857285), (856678, 857302), (856678, 857725), (856678, 869105), (856678, 856890), (37478, 713575), (37478, 157800), (37478, 883626), (37478, 646957), (37478, 866990), (37478, 157912), (37478, 480475), (37478, 471645), (37478, 832766), (119399, 934121), (119399, 321365), (158314, 472643), (158314, 860422), (148077, 862786), (148077, 863068), (229998, 866381), (473710, 760424), (473710, 646211), (473710, 473803), (473712, 864932), (633460, 794096), (633460, 754705), (633460, 860422), (633460, 797142), (633460, 701399), (633460, 871144), (633460, 921334), (633460, 751047), (633460, 859937), (633463, 795688), (633463, 746734), (633463, 862095), (160377, 857725), (232058, 870600), (232058, 868389), (232058, 860024), (232058, 860540), (160379, 788616), (160379, 644251), (160379, 856702), (856702, 860995), (856702, 869524), (856702, 862327), (856702, 857177), (856702, 858203), (858752, 863887), (858752, 864091), (858752, 863731), (205442, 482564), (205442, 322694), (205442, 632903), (205442, 866724), (205442, 473386), (205442, 857823), (205442, 868170), (205442, 831519), (158339, 857867), (158339, 308893), (60041, 152007), (854669, 868743), (150161, 152437), (150161, 152318), (31382, 857177), (623255, 633869), (320160, 750051), (320160, 680524), (320160, 322103), (152226, 865571), (152226, 866381), (152226, 229998), (152226, 789199), (74404, 148140), (864932, 871303), (125606, 797985), (678568, 863731), (678568, 867372), (858793, 862400), (858793, 860371), (858793, 870771), (858793, 866990), (152229, 853105), (152229, 844082), (12971, 45870), (12971, 148591), (148140, 262480), (148140, 296080), (148140, 862740), (148140, 784913), (148140, 856751), (148140, 492909), (148140, 856653), (866990, 870771), (866990, 883626), (856751, 857829), (856751, 856936), (856751, 856780), (856751, 862740), (856751, 859099), (856752, 892904), (856752, 860540), (856752, 860376), (856752, 856890), (856752, 863595), (856752, 856780), (856752, 861793), (793270, 858563), (160441, 857823), (150204, 643440), (150204, 152226), (150204, 858309), (150204, 639933), (150204, 229998), (150204, 866381), (860863, 869943), (756420, 866990), (150212, 869105), (150212, 310882), (150212, 858879), (688839, 856916), (688839, 857431), (465608, 857104), (31433, 482883), (31433, 654276), (31433, 480212), (31433, 861123), (312010, 480475), (856780, 861793), (856780, 860540), (856780, 861286), (473803, 646211), (146125, 146200), (146125, 867356), (146125, 636013), (146125, 752110), (146125, 784655), (148175, 862786), (23249, 869642), (23249, 473479), (154326, 832484), (154326, 859629), (133855, 480867), (133855, 592999), (856803, 857200), (856803, 859099), (856803, 857685), (856803, 865686), (856803, 857480), (856803, 863547), (856803, 863261), (156388, 857302), (713446, 871426), (871144, 921334), (148207, 866724), (148207, 857859), (148207, 860299), (146159, 600512), (146159, 859803), (146159, 835432), (146159, 863068), (146159, 312586), (146159, 871531), (310003, 870600), (113398, 863693), (113398, 860422), (483326, 645512), (152318, 859139), (152318, 790020), (152318, 871303), (152318, 153743), (152318, 856936), (152318, 830292), (152318, 864932), (152318, 645231), (858879, 869105), (856832, 857637), (856832, 861286), (856832, 858261), (158475, 860761), (158475, 861786), (158475, 866164), (791309, 831519), (641811, 856780), (146200, 867356), (146200, 752110), (146200, 784655), (31514, 751888), (31514, 160377), (633629, 862400), (314143, 477504), (314143, 870771), (314143, 858793), (314143, 866990), (4896, 114769), (4896, 641811), (4896, 867578), (4896, 856780), (4896, 267837), (840480, 862786), (840480, 856678), (840480, 857302), (840480, 856890), (840480, 857285), (787236, 864084), (205610, 748949), (45870, 148591), (840496, 869105), (840496, 854669), (752434, 864968), (752434, 863137), (752434, 858563), (860980, 865285), (856886, 857859), (856886, 857630), (856886, 857302), (858937, 865686), (856890, 857285), (856890, 857302), (856890, 860376), (856890, 892904), (856890, 858475), (856890, 863595), (201529, 787236), (201529, 312831), (158525, 443642), (146238, 158997), (146238, 861370), (860995, 863491), (860995, 869524), (860995, 862327), (154438, 857793), (154438, 205610), (154438, 857218), (750411, 861370), (148300, 860464), (148300, 866396), (148300, 859036), (187213, 856752), (187213, 861793), (187213, 321098), (187213, 856780), (590669, 861286), (856916, 857776), (856916, 857218), (856916, 859629), (856916, 857480), (856916, 857431), (856916, 857786), (856916, 858581), (830292, 868840), (586586, 856751), (316250, 485393), (316250, 321858), (316250, 856890), (316250, 601054), (4961, 262480), (4961, 296080), (4961, 142819), (4961, 862740), (4961, 784913), (4961, 32792), (4961, 856751), (4961, 148140), (4961, 492909), (4961, 856653), (760675, 795688), (314213, 321457), (314213, 473386), (314213, 634649), (316262, 858752), (316262, 858087), (316262, 319304), (316262, 858475), (316262, 863887), (316262, 857200), (316262, 863731), (316262, 858037), (316262, 857690), (316262, 857823), (856936, 864932), (856936, 857823), (856936, 871303), (159739, 296080), (19311, 338819), (19311, 643140), (19311, 871303), (152437, 322534), (152437, 789127), (152437, 153743), (312190, 866724), (312190, 864482), (312190, 868827), (312190, 860299), (312190, 859502), (84864, 871531), (84864, 146159), (220035, 868827), (158596, 471001), (158596, 312762), (158596, 932757), (158596, 860422), (158599, 840496), (158599, 665443), (158599, 869105), (158599, 318693), (70535, 675897), (70535, 864930), (349069, 858261), (797584, 869105), (797584, 868827), (797584, 857725), (797584, 856678), (471954, 784569), (471954, 857218), (471954, 859099), (471954, 476514), (471954, 862390), (834453, 858563), (834453, 862327), (320405, 862414), (320405, 657726), (56218, 861123), (82843, 786266), (82843, 583831), (107420, 157744), (107420, 632996), (107420, 858078), (107420, 645526), (107420, 860967), (107420, 857033), (107420, 625866), (859036, 860464), (859036, 866396), (474014, 673138), (474014, 857285), (474014, 871646), (863137, 864968), (148386, 149009), (148386, 857160), (148386, 863179), (148386, 861286), (474016, 868071), (2980, 857336), (2980, 475179), (857024, 858238), (58306, 856653), (859075, 862095), (861123, 866233), (861123, 862123), (654276, 861123), (5061, 482674), (5061, 867790), (5061, 760126), (857033, 858078), (857033, 860967), (316362, 857200), (316362, 866632), (316362, 861812), (633803, 634365), (633803, 859075), (863179, 866724), (840653, 863068), (859086, 867473), (480212, 482883), (480212, 654276), (480212, 861123), (793557, 856803), (314326, 857302), (701399, 794096), (701399, 754705), (701399, 860422), (701399, 797142), (701399, 859937), (701399, 871144), (701399, 921334), (701399, 751047), (472023, 869943), (472023, 857285), (472023, 860863), (756697, 853130), (859098, 859099), (859099, 871426), (859099, 860371), (859099, 862390), (859099, 865686), (154588, 316068), (154588, 857177), (154588, 857754), (154588, 858251), (318425, 797688), (318425, 863068), (480222, 854669), (480222, 859803), (480222, 868743), (480222, 858053), (480222, 485013), (601054, 856890), (58335, 642861), (631788, 859099), (631788, 856751), (93166, 312992), (93166, 866632), (93166, 858078), (484347, 857867), (52223, 311119), (154624, 155816), (56324, 856653), (152587, 868297), (633869, 644947), (633869, 834453), (310285, 612490), (857104, 858752), (857104, 857200), (857104, 857218), (857104, 864091), (857104, 863731), (754705, 794096), (754705, 859937), (754705, 797142), (754705, 860422), (754705, 871144), (754705, 921334), (750613, 867473), (646175, 858078), (123936, 159305), (123936, 313407), (13346, 633888), (736294, 857866), (736294, 754437), (795688, 862095), (119849, 862400), (119849, 149865), (119849, 161083), (119849, 127516), (33837, 153681), (33837, 862624), (33837, 785693), (33837, 862400), (33837, 863595), (33837, 665443), (33837, 269388), (33837, 478442), (33837, 837367), (318510, 864209), (318510, 853747), (318510, 860422), (472115, 474424), (472115, 871392), (484408, 857285), (484408, 857302), (484408, 867356), (484408, 586586), (484408, 856751), (705601, 861793), (705601, 760131), (705601, 757190), (705601, 834136), (705601, 747402), (705601, 866398), (705601, 862095), (646211, 862236), (646211, 700983), (857160, 857200), (857160, 864477), (857160, 861286), (269388, 862400), (857177, 857685), (857177, 858279), (857177, 857880), (857177, 857754), (857177, 858251), (857177, 868840), (857177, 857871), (842852, 860464), (842852, 856562), (844905, 860967), (859241, 867009), (859241, 862587), (787561, 860863), (148591, 862123), (857200, 858752), (857200, 858203), (857200, 858087), (857200, 857929), (857200, 858475), (857200, 859099), (857200, 863887), (857200, 863731), (857200, 861812), (857200, 858037), (857200, 857690), (857200, 863547), (857200, 857823), (156786, 797584), (156786, 869105), (156786, 856678), (156786, 319304), (156786, 857725), (853112, 857336), (853112, 866990), (3196, 480475), (857218, 862400), (857218, 871392), (857218, 863731), (857218, 862390), (857218, 857431), (857218, 859099), (484482, 856780), (859268, 860863), (322694, 482564), (322694, 632903), (322694, 866724), (322694, 473386), (322694, 857823), (322694, 868170), (322694, 831519), (46214, 296080), (46214, 156166), (857223, 858628), (154765, 746769), (154765, 858563), (154765, 756932), (154765, 856669), (154765, 858628), (296080, 784913), (296080, 868045), (296080, 862740), (296080, 323205), (296080, 592999), (296080, 492909), (296080, 856653), (296080, 856751), (17553, 147970), (17553, 152587), (17553, 93653), (113814, 866632), (113814, 858088), (113814, 149346), (113814, 159997), (113814, 868071), (644251, 856702), (308385, 868071), (9390, 856886), (482481, 859629), (54454, 479458), (54454, 843864), (54454, 309850), (54454, 637132), (859329, 860024), (756932, 858563), (756932, 858628), (756932, 856669), (857285, 870224), (857285, 858353), (857285, 868827), (857285, 863349), (857285, 857302), (857285, 869943), (857285, 860863), (857285, 871646), (160966, 680524), (117962, 862400), (117962, 119849), (117962, 127516), (117962, 149865), (625866, 632996), (625866, 645526), (625866, 860967), (625866, 857033), (625866, 858078), (310476, 858279), (756941, 863491), (756941, 760131), (756941, 839628), (443599, 857104), (443599, 858309), (726226, 860863), (158931, 857850), (857302, 870550), (857302, 862752), (857302, 865881), (857302, 857786), (857302, 859621), (664791, 785693), (148697, 857200), (148697, 633463), (148697, 795688), (148697, 746734), (148697, 862095), (480475, 883626), (480475, 635191), (480475, 866990), (480475, 785693), (480475, 832766), (480475, 565983), (152796, 156970), (152796, 860299), (152796, 482582), (152796, 311119), (761053, 933914), (761053, 857867), (318693, 840496), (318693, 869105), (318693, 665443), (867559, 868186), (478442, 837367), (613614, 871144), (613614, 859937), (613614, 786162), (746734, 795688), (746734, 862095), (472302, 749849), (644337, 788768), (644337, 860863), (146678, 312586), (146678, 480475), (857336, 866990), (832766, 883626), (832766, 866990), (146687, 857866), (322818, 473712), (322818, 864932), (482564, 866724), (482564, 632903), (482564, 868170), (482564, 857823), (482564, 831519), (634119, 861123), (634119, 862123), (474376, 856751), (828682, 860863), (146700, 842084), (832780, 858722), (312586, 600512), (312586, 493383), (312586, 835432), (312586, 871531), (746769, 858628), (746769, 858563), (746769, 756932), (746769, 856669), (158997, 858752), (158997, 857200), (158997, 858037), (158997, 316262), (158997, 858087), (158997, 319304), (158997, 858475), (158997, 863887), (158997, 863731), (158997, 857690), (158997, 868827), (158997, 159485), (158997, 857823), (482582, 860299), (857367, 870224), (857367, 859650), (857367, 860405), (857367, 859577), (857367, 857786), (857367, 863547), (857367, 868827), (310555, 865686), (685340, 861123), (785693, 832949), (9503, 863547), (9503, 860405), (9503, 857367), (156959, 485393), (148769, 471954), (148769, 309349), (148769, 857218), (148769, 784569), (148769, 859099), (148769, 324973), (148769, 862390), (797985, 868186), (757028, 857850), (202021, 832850), (202021, 870394), (202021, 650734), (861475, 863068), (480551, 796825), (480551, 864932), (480551, 780012), (156970, 860299), (156970, 698828), (156970, 482582), (156970, 311119), (314666, 482564), (292141, 787955), (240946, 857480), (42293, 319067), (161083, 870224), (161083, 625866), (161083, 857285), (15677, 857880), (148798, 786235), (478527, 860995), (478527, 869524), (478527, 865285), (478527, 862327), (478527, 749849), (478527, 828682), (478527, 858879), (478527, 856702), (478527, 860863), (146756, 718376), (472389, 863137), (279883, 863731), (279883, 472964), (279883, 678568), (279883, 867372), (832850, 870394), (638291, 862095), (7509, 856674), (7509, 724586), (64854, 862400), (64854, 921334), (64854, 860422), (64854, 751047), (64854, 754705), (64854, 863698), (64854, 526355), (64854, 797142), (64854, 701399), (64854, 842084), (64854, 69978), (64854, 857630), (64854, 859937), (64854, 794096), (64854, 871144), (64854, 839794), (64854, 633460), (64854, 481205), (64854, 870456), (857431, 857776), (857431, 858581), (857431, 857786), (857431, 859629), (5464, 856674), (5464, 98147), (861532, 862752), (152925, 319016), (476514, 878993), (394601, 861793), (394601, 856780), (863595, 870224), (863595, 892904), (324973, 784569), (324973, 471954), (324973, 859099), (324973, 857218), (324973, 862390), (492909, 856780), (492909, 784913), (492909, 862740), (492909, 856653), (492909, 856751), (859502, 864482), (859502, 860299), (859502, 866724), (859502, 864709), (673138, 862327), (673138, 831519), (478579, 860371), (482674, 867790), (482674, 760126), (482674, 860863), (11644, 857200), (11644, 149865), (11644, 581841), (11644, 450087), (755068, 868389), (755075, 858088), (97669, 504464), (97669, 315426), (97669, 157691), (97669, 789211), (857480, 857859), (857480, 866724), (857480, 860299), (857480, 933924), (210317, 476514), (185746, 477005), (865686, 871163), (13720, 24930), (13720, 633803), (13720, 450087), (13720, 268590), (13720, 634365), (114074, 873372), (322978, 685340), (148899, 857218), (148899, 232058), (316837, 864482), (5545, 860761), (146861, 858310), (146861, 868665), (146861, 860109), (146861, 151150), (13748, 856752), (13748, 860376), (13748, 892904), (13748, 856890), (13748, 863595), (13748, 156028), (478646, 866990), (859577, 859650), (312762, 864928), (312762, 932757), (312762, 860422), (757190, 834136), (757190, 861793), (757190, 760131), (757190, 866398), (757190, 862095), (751047, 794096), (751047, 754705), (751047, 797142), (751047, 860422), (751047, 859937), (751047, 871144), (751047, 921334), (150987, 867009), (150987, 859241), (150987, 474986), (150987, 862587), (15821, 802839), (316879, 828682), (316879, 860863), (316879, 478527), (314833, 863595), (863698, 870456), (93653, 147970), (93653, 152587), (146902, 147969), (146902, 857867), (112089, 665443), (112089, 318693), (112089, 158599), (112089, 840496), (112089, 869105), (112089, 316250), (142819, 296080), (142819, 842852), (142819, 148140), (142819, 492909), (142819, 856751), (142819, 262480), (142819, 784913), (142819, 856562), (142819, 862740), (142819, 856653), (142819, 860464), (859621, 863491), (650734, 832850), (650734, 870394), (794096, 859937), (794096, 856916), (794096, 860422), (794096, 797142), (794096, 857431), (794096, 871144), (794096, 921334), (794096, 873372), (794096, 847629), (34288, 857104), (34288, 857218), (34288, 422460), (863731, 867372), (863731, 863887), (417267, 633888), (787955, 863068), (787955, 840653), (544247, 832484), (312831, 787236), (312831, 858078), (312831, 858279), (132608, 156055), (146945, 859629), (790020, 856936), (790020, 864932), (790020, 868856), (790020, 871303), (314890, 864968), (157197, 837571), (157197, 787236), (157197, 201529), (157197, 843864), (157197, 859241), (157197, 312831), (149009, 705601), (149009, 760131), (149009, 757190), (149009, 861793), (149009, 857480), (149009, 862095), (149009, 834136), (149009, 866398), (149009, 856916), (149009, 161083), (183828, 636013), (867861, 868029), (235031, 871163), (388633, 859098), (857630, 862400), (857630, 870456), (857630, 863698), (857630, 861812), (857630, 867578), (787998, 857690), (857637, 857776), (857637, 858261), (857637, 857823), (450087, 857200), (450087, 581841), (450087, 633803), (450087, 634365), (319016, 857480), (319016, 319409), (319016, 856562), (718376, 858475), (155177, 857200), (155177, 756697), (155177, 866460), (155177, 322733), (132648, 316250), (310829, 857480), (310829, 317021), (626225, 862752), (626225, 861532), (640561, 840480), (640561, 862786), (216632, 393586), (216632, 859650), (482883, 861123), (482883, 654276), (46665, 123936), (46665, 159305), (46665, 58335), (46665, 642861), (46665, 313407), (321098, 856752), (321098, 861793), (321098, 856780), (642634, 860540), (159305, 313407), (845390, 868297), (845390, 858053), (857685, 874771), (857685, 858251), (857685, 868840), (857685, 857754), (857685, 864091), (857685, 888291), (865881, 870550), (861786, 863698), (857690, 863937), (857690, 858475), (857690, 858037), (857690, 863887), (857690, 858752), (857690, 858087), (857690, 863731), (857690, 857823), (319067, 322534), (319067, 856678), (317021, 857480), (317021, 643596), (476766, 795688), (476766, 760675), (476766, 632917), (476766, 837571), (134751, 313689), (134751, 159341), (134751, 480551), (46688, 858879), (46688, 323219), (46688, 832949), (46688, 154139), (46688, 785693), (861793, 866398), (861793, 862095), (104034, 871392), (104034, 833714), (104034, 472115), (104034, 860551), (310882, 869105), (310882, 858879), (480867, 592999), (40548, 322103), (147042, 858310), (159341, 313689), (159341, 480551), (151150, 869105), (151150, 868665), (151150, 754163), (151150, 751828), (677490, 751336), (677490, 863887), (861812, 864709), (155257, 864928), (155257, 158596), (155257, 932757), (155257, 860422), (155257, 471001), (155257, 312762), (157306, 857637), (157306, 856936), (157306, 866990), (157306, 846184), (157306, 861812), (157306, 862327), (157306, 857880), (157306, 858203), (157306, 857630), (157306, 859621), (857725, 866396), (857725, 859036), (857725, 869105), (474754, 790020), (323205, 592999), (102022, 866990), (102022, 173871), (315021, 755674), (315021, 856780), (315021, 864282), (118416, 850365), (640657, 831519), (323219, 480987), (323219, 785693), (323219, 832949), (147092, 150129), (147092, 309850), (485013, 854669), (485013, 868743), (3737, 840496), (3737, 665443), (3737, 318693), (3737, 158599), (3737, 41293), (3737, 751888), (3737, 869105), (3737, 112089), (857754, 868840), (857754, 858251), (857754, 858279), (859803, 863132), (859803, 860863), (312992, 866632), (312992, 858078), (356005, 857200), (384678, 485355), (124586, 585843), (124586, 477023), (857776, 859629), (323249, 477504), (323249, 507000), (476850, 857104), (476850, 853747), (149169, 863491), (472755, 797584), (857786, 870224), (857786, 862752), (857786, 868827), (104140, 184258), (796369, 831421), (634579, 868071), (151262, 646211), (151262, 700983), (151262, 311641), (151262, 309850), (151262, 862236), (857823, 858752), (857823, 863731), (857823, 858037), (857823, 858087), (857823, 866724), (857823, 868170), (857823, 858475), (857823, 863887), (149220, 205442), (149220, 482564), (149220, 322694), (149220, 632903), (149220, 868840), (149220, 473386), (149220, 310478), (149220, 866724), (149220, 831519), (149220, 868170), (149220, 857823), (34534, 46688), (34534, 323219), (34534, 832949), (34534, 154139), (34534, 785693), (151268, 151269), (151268, 865686), (638696, 862400), (751336, 858563), (751336, 863887), (151269, 865686), (780012, 857480), (780012, 857177), (780012, 857754), (780012, 864932), (155366, 318693), (638704, 857285), (786162, 871144), (786162, 859937), (853747, 864209), (853747, 860422), (478965, 788768), (478965, 644337), (837367, 859629), (48889, 853105), (48889, 844082), (48889, 152229), (857850, 858309), (857850, 858279), (159485, 858752), (159485, 857200), (159485, 639908), (159485, 316262), (159485, 858087), (159485, 319304), (159485, 858475), (159485, 785949), (159485, 863887), (159485, 863731), (159485, 858037), (159485, 857690), (159485, 785693), (159485, 857823), (757503, 857480), (757503, 860299), (757503, 866724), (102144, 865285), (857859, 862400), (857859, 933924), (857859, 863137), (857859, 858793), (157446, 865285), (857867, 857880), (857867, 933914), (857871, 857880), (149274, 155177), (859937, 871144), (859937, 921334), (859937, 860422), (231210, 860371), (69420, 831421), (69420, 888422), (651052, 866632), (651052, 857867), (173871, 866990), (255793, 643440), (69434, 870224), (319304, 858752), (319304, 797584), (319304, 856678), (319304, 858087), (319304, 858475), (319304, 863887), (319304, 857200), (319304, 869105), (319304, 863731), (319304, 858037), (319304, 857690), (319304, 857725), (319304, 857823), (751437, 858475), (51022, 231210), (51022, 860371), (311119, 830292), (311119, 482582), (311119, 868840), (311119, 844905), (311119, 860299), (311119, 698828), (147280, 147458), (147280, 857859), (147280, 856653), (147280, 473386), (147280, 861370), (644947, 834453), (864084, 869524), (321365, 860464), (321365, 934121), (57168, 739634), (485209, 751336), (485209, 677490), (485209, 859621), (485209, 857302), (485209, 863887), (477023, 585843), (477023, 869524), (149346, 866632), (665443, 862624), (665443, 840496), (665443, 869105), (665443, 863595), (98147, 856674), (157544, 388633), (157544, 859098), (835432, 844082), (835432, 871531), (147307, 857786), (474986, 859241), (474986, 862587), (474986, 867009), (120683, 156970), (94066, 856916), (94066, 483326), (94066, 857431), (128882, 844905), (757620, 871530), (757620, 858309), (153463, 866724), (860024, 870600), (860024, 868389), (147324, 871646), (147324, 633888), (147324, 417267), (147324, 857285), (147324, 474014), (640899, 859502), (472964, 863731), (472964, 678568), (472964, 867372), (870277, 871172), (567174, 638704), (61326, 313689), (61326, 480551), (61326, 159341), (61326, 134751), (862095, 869943), (862095, 866398), (155547, 857218), (155547, 863731), (192412, 862095), (858013, 858564), (645026, 794096), (645026, 847629), (638889, 837367), (862123, 863137), (92076, 856678), (92076, 863491), (481196, 869524), (36781, 612490), (36781, 310285), (321457, 634649), (321457, 473386), (319409, 857480), (319409, 856562), (481205, 859937), (481205, 921334), (481205, 860422), (481205, 751047), (481205, 871144), (481205, 794096), (481205, 754705), (481205, 526355), (481205, 633460), (481205, 797142), (481205, 701399), (858037, 858752), (858037, 863731), (858037, 858087), (858037, 858475), (858037, 863887), (831421, 863698), (831421, 888422), (96192, 105617), (96192, 853747), (184258, 473386), (858053, 868297), (858053, 859803), (153548, 867473), (153548, 858564), (153548, 859086), (159698, 857871), (327671, 784569), (327671, 867473), (65494, 859099), (65494, 631788), (65494, 856751), (471001, 860422), (272345, 657726), (272345, 320405), (272345, 858475), (272345, 862414), (477145, 786235), (858078, 866632), (858078, 866858), (858078, 859299), (858078, 860967), (645092, 862123), (858087, 858752), (858087, 863887), (858087, 858475), (858087, 863731), (858088, 863490), (858088, 868071), (311274, 857866), (317422, 477504), (317422, 323249), (317422, 507000), (311283, 633463), (32759, 645026), (32759, 82843), (32759, 847629), (32759, 794096), (32759, 583831), (32759, 857690), (32759, 787998), (40953, 934121), (40953, 321365), (40953, 119399), (157691, 789211), (837628, 872289), (837628, 871531), (241662, 479458)]\n",
      "[147458, 868359, 485393, 526355, 157717, 802839, 32792, 319513, 864282, 933914, 151580, 862236, 14365, 831519, 315426, 63523, 933924, 868389, 475179, 444460, 116781, 157744, 792624, 864311, 870456, 675897, 933947, 837691, 313407, 688193, 643140, 4165, 829509, 632903, 473165, 866381, 933967, 153681, 114769, 632917, 843864, 858203, 866396, 866398, 309349, 278631, 157800, 4206, 645231, 4208, 839794, 854130, 333939, 585843, 479347, 862327, 858238, 839812, 788616, 612490, 860299, 858251, 309390, 153743, 149649, 858261, 870550, 583831, 796825, 684188, 866460, 133283, 632996, 858279, 155816, 229550, 833714, 635059, 862390, 934070, 784569, 153787, 862400, 858309, 321734, 858310, 870600, 55496, 205002, 24779, 637132, 159945, 862414, 581841, 860371, 147667, 485589, 751828, 860376, 157912, 153818, 485595, 864477, 127200, 479458, 864482, 757989, 641255, 557288, 934121, 80106, 147694, 858353, 860405, 159993, 159997, 248065, 317701, 860422, 831756, 784655, 751888, 80145, 874771, 749849, 31006, 26912, 788768, 311591, 473386, 268590, 160047, 860464, 645423, 739634, 317747, 784692, 844082, 33079, 635191, 868665, 473403, 657726, 760126, 477504, 321858, 760131, 317765, 866632, 313673, 41293, 641359, 262480, 145748, 313689, 69978, 311641, 24930, 842084, 846184, 149865, 6505, 858475, 858476, 471401, 827755, 643440, 393586, 870771, 20858, 862587, 860540, 156028, 633214, 860551, 473479, 645512, 868743, 878993, 156053, 645526, 156055, 721301, 633247, 862624, 866724, 117159, 790962, 8627, 135609, 108986, 151994, 850365, 600512, 858563, 858564, 864709, 152007, 592330, 698828, 4556, 154064, 858581, 797142, 20954, 868827, 309729, 750051, 795111, 868840, 397802, 238062, 752110, 154096, 858609, 856562, 319985, 856564, 754163, 868856, 319999, 147969, 147970, 858628, 313861, 156166, 322056, 74248, 643596, 248333, 784913, 158225, 862740, 154139, 127516, 311836, 862752, 121383, 866858, 59946, 121388, 868909, 311862, 322103, 154168, 700983, 21048, 422460, 152127, 862786, 680524, 856653, 842319, 311887, 860757, 834136, 860761, 309850, 856669, 471645, 856673, 856674, 858722, 309862, 856678, 37478, 119399, 158314, 760424, 148077, 229998, 473710, 473712, 150129, 633460, 633463, 160377, 232058, 160379, 856702, 785022, 858752, 205442, 158339, 789127, 60041, 854669, 504464, 150161, 31382, 623255, 864928, 320160, 864930, 152226, 74404, 864932, 316068, 125606, 678568, 858793, 152229, 12971, 148140, 866990, 856751, 856752, 793270, 160441, 150204, 860863, 867009, 756420, 150212, 688839, 465608, 864968, 31433, 312010, 856780, 473803, 146125, 148175, 789199, 23249, 858833, 154326, 789211, 133855, 565983, 856803, 156388, 713446, 871144, 148207, 146159, 869105, 310003, 113398, 483326, 871163, 152318, 858879, 856832, 871172, 754437, 158475, 791309, 641811, 146200, 31514, 633629, 314143, 4896, 840480, 787236, 860967, 205610, 45870, 840496, 752434, 860980, 856886, 858937, 856890, 201529, 158525, 146238, 860995, 154438, 750411, 148300, 187213, 590669, 856916, 830292, 586586, 316250, 863068, 4961, 760675, 314213, 316262, 713575, 856936, 159739, 19311, 152437, 480122, 312190, 84864, 220035, 158596, 338819, 158599, 871303, 70535, 349069, 797584, 471954, 932757, 834453, 320405, 760729, 56218, 82843, 873372, 107420, 859036, 863132, 474014, 863137, 148386, 474016, 639908, 2980, 883626, 639933, 857024, 58306, 859075, 861123, 654276, 5061, 857033, 316362, 633803, 863179, 840653, 859086, 480212, 793557, 314326, 701399, 472023, 756697, 859098, 859099, 154588, 318425, 480222, 601054, 871392, 58335, 310242, 832484, 322534, 631788, 93166, 797688, 484347, 52223, 154624, 871426, 859139, 56324, 865285, 152587, 203789, 633869, 310285, 857104, 754705, 750613, 867356, 863261, 646175, 123936, 633888, 13346, 736294, 795688, 119849, 338987, 867372, 33837, 318510, 472115, 484408, 705601, 646211, 857160, 269388, 857177, 842852, 861286, 592999, 844905, 859241, 871530, 787561, 871531, 636013, 148591, 857200, 853105, 156786, 863349, 853112, 507000, 3196, 857218, 484482, 859268, 322694, 46214, 857223, 853130, 154765, 296080, 105617, 867473, 17553, 869524, 113814, 644251, 308385, 859299, 322733, 9390, 482481, 54454, 861370, 859329, 756932, 857285, 160966, 117962, 625866, 310476, 756941, 310478, 443599, 726226, 158931, 857302, 664791, 148697, 367835, 480475, 152796, 761053, 871646, 318693, 867559, 478442, 613614, 746734, 472302, 644337, 146678, 857336, 867578, 443642, 832766, 146687, 322818, 863491, 482564, 863490, 634119, 474376, 869642, 828682, 146700, 832780, 312586, 746769, 158997, 482582, 857367, 759061, 310555, 685340, 785693, 9503, 156959, 148769, 797985, 865571, 757028, 202021, 861475, 480551, 156970, 314666, 292141, 240946, 42293, 474424, 161083, 863547, 15677, 148798, 478527, 146756, 472389, 279883, 832850, 638291, 7509, 64854, 857431, 5464, 861532, 152925, 476514, 394601, 863595, 324973, 492909, 859502, 673138, 478579, 482674, 11644, 755068, 755075, 97669, 857480, 210317, 185746, 748949, 865686, 13720, 114074, 322978, 148899, 316837, 5545, 146861, 13748, 832949, 478646, 859577, 312762, 851387, 863683, 757190, 751047, 150987, 863693, 15821, 316879, 867790, 314833, 863698, 93653, 146902, 112089, 142819, 888291, 859621, 859629, 650734, 794096, 34288, 863731, 417267, 787955, 544247, 634365, 312831, 132608, 146945, 859650, 790020, 314890, 157197, 149009, 183828, 867861, 235031, 388633, 785949, 857630, 787998, 857637, 450087, 319016, 718376, 155177, 132648, 310829, 626225, 640561, 869943, 216632, 267837, 472643, 482883, 46665, 321098, 642634, 159305, 845390, 857685, 865881, 861786, 857690, 319067, 317021, 476766, 134751, 46688, 861793, 104034, 310882, 480867, 40548, 888422, 147042, 724586, 159341, 151150, 677490, 861812, 155257, 157306, 857725, 474754, 870018, 323205, 102022, 315021, 480910, 863887, 118416, 640657, 323219, 159380, 147092, 485013, 3737, 857754, 859803, 308893, 312992, 356005, 384678, 124586, 857776, 323249, 476850, 149169, 472755, 857786, 868029, 863937, 857793, 104140, 868045, 796369, 634579, 868054, 480987, 151262, 857823, 149220, 857829, 34534, 151268, 638696, 751336, 151269, 868071, 780012, 155366, 638704, 786162, 853747, 478965, 921334, 837367, 48889, 857850, 159485, 757503, 102144, 857859, 157446, 857866, 857867, 753419, 847629, 857871, 857880, 634649, 149274, 859937, 231210, 69420, 651052, 646957, 173871, 642861, 255793, 69434, 786235, 493383, 319304, 857929, 868170, 751437, 51022, 311119, 147280, 870224, 477005, 644947, 864084, 321365, 57168, 485209, 786266, 864091, 868186, 477023, 872289, 149346, 665443, 98147, 157544, 835432, 866154, 147307, 474986, 120683, 94066, 128882, 757620, 866164, 153463, 860024, 147324, 640899, 472964, 870277, 567174, 747402, 61326, 862095, 155547, 192412, 858013, 645026, 755624, 638889, 862123, 92076, 481196, 36781, 321457, 319409, 481205, 858037, 866233, 831421, 622525, 96192, 184258, 837571, 858053, 868297, 153548, 839628, 860109, 864209, 159698, 327671, 65494, 471001, 272345, 477145, 755674, 858078, 645092, 647142, 858087, 892904, 858088, 311274, 485355, 317422, 311283, 32759, 40953, 870394, 157691, 837628, 241662]\n"
     ]
    }
   ],
   "source": [
    "#2.4 medium largest weakly connect #NODES EDEGES\n",
    "\n",
    "S = medium_graph.subgraph(l) \n",
    "print(list(nx.edges(S)))\n",
    "print(list(nx.nodes(S)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "83abdc24-8b1b-4130-84dc-d99753b73c0d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "{636339}\n"
     ]
    }
   ],
   "source": [
    "#2.4.3\n",
    "#largest strongly component medium graph\n",
    "m = max(nx.strongly_connected_components(medium_graph), key=len)\n",
    "print(len(m))\n",
    "print(m)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1cb730d9-553a-4a7f-b434-34a593a4ad66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[]\n",
      "[636339]\n"
     ]
    }
   ],
   "source": [
    "#2.4 medium strongly connected  #NODES #EDGES\n",
    "\n",
    "S = medium_graph.subgraph(m)\n",
    "print(list(nx.edges(S)))\n",
    "print(list(nx.nodes(S)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "762d0d82-dd70-41a9-b4c3-9fd03c3b29e4",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " ...]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2.4.4\n",
    "#medium_graph strongly connected component\n",
    "\n",
    "import networkx as nx\n",
    "G = nx.cycle_graph(5, create_using=nx.DiGraph())\n",
    "\n",
    "nx.add_cycle(G, medium_graph)\n",
    "\n",
    "[\n",
    "\n",
    "   len(c)\n",
    "\n",
    "    for c in sorted(nx.strongly_connected_components(medium_graph), key=len, reverse=True)\n",
    "\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e2695f71-a56f-4c47-a23d-8d2b8e54d0a0",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " ...]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2.4 large graph strongly\n",
    "\n",
    "G = nx.cycle_graph(5, create_using=nx.DiGraph())\n",
    "\n",
    "nx.add_cycle(G, large_graph)\n",
    "\n",
    "[\n",
    "\n",
    "   len(c)\n",
    "\n",
    "    for c in sorted(nx.strongly_connected_components(medium_graph), key=len, reverse=True)\n",
    "\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "af603fcf-b01b-4cea-82b7-7d2cda802345",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18531\n"
     ]
    }
   ],
   "source": [
    "#2.4 large graph strongly\n",
    "r = max(nx.strongly_connected_components(large_graph), key=len)\n",
    "print(len(r))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f58683c-488d-429a-ad3b-0941702ceec7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2.4 large graph stronglym  #NODES EDGES\n",
    "S = large_graph.subgraph(r)\n",
    "print(list(nx.edges(S)))\n",
    "print(list(nx.nodes(S))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "92911301-0c93-46bc-a940-e8ca792e0495",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[24567,\n",
       " 114,\n",
       " 73,\n",
       " 35,\n",
       " 26,\n",
       " 23,\n",
       " 22,\n",
       " 21,\n",
       " 20,\n",
       " 19,\n",
       " 19,\n",
       " 19,\n",
       " 13,\n",
       " 13,\n",
       " 13,\n",
       " 13,\n",
       " 12,\n",
       " 11,\n",
       " 11,\n",
       " 11,\n",
       " 11,\n",
       " 11,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 10,\n",
       " 9,\n",
       " 9,\n",
       " 9,\n",
       " 9,\n",
       " 9,\n",
       " 9,\n",
       " 9,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " ...]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2.4 large_graph weakly\n",
    "\n",
    "G = nx.cycle_graph(5, create_using=nx.DiGraph())\n",
    "\n",
    "nx.add_cycle(G, large_graph)\n",
    "\n",
    "[\n",
    "\n",
    "   len(c)\n",
    "\n",
    "    for c in sorted(nx.weakly_connected_components(large_graph), key=len, reverse=True)\n",
    "\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ea9091d6-575c-470a-9837-751514f5327c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24567\n"
     ]
    }
   ],
   "source": [
    "#2.4\n",
    "w = max(nx.weakly_connected_components(large_graph), key=len)\n",
    "\n",
    "print(len(w))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "05b3d94a-6472-4d0a-9b65-ae6f61b1b6f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "IOPub data rate exceeded.\n",
      "The Jupyter server will temporarily stop sending output\n",
      "to the client in order to avoid crashing it.\n",
      "To change this limit, set the config variable\n",
      "`--ServerApp.iopub_data_rate_limit`.\n",
      "\n",
      "Current values:\n",
      "ServerApp.iopub_data_rate_limit=1000000.0 (bytes/sec)\n",
      "ServerApp.rate_limit_window=3.0 (secs)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#2.4 NODES EDGES LARGE GRAPH WEAKLY CONNEC\n",
    "S = large_graph.subgraph(w)\n",
    "print(list(nx.edges(S)))\n",
    "print(list(nx.nodes(S)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7370b395-970f-40e8-a7fc-c2751f15f472",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.15661125055481695\n",
      "0.26798365163434074\n"
     ]
    }
   ],
   "source": [
    "#2.5\n",
    "print(nx.average_clustering(medium_graph))\n",
    "print(nx.average_clustering(large_graph))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ff180937-b0c2-4abd-9724-b0689c5b1bb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2.6 #distance distribution  medium graph\n",
    "import matplotlib.pyplot as plt\n",
    "path = nx.all_pairs_shortest_path_length(medium_graph)\n",
    "dpath = {x[0]:x[1] for x in path}         \n",
    "plt.hist(dpath)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "87538c2d-5fe2-4a72-8cc8-6ebb67ecbdcb",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2.6 \n",
    "p= nx.all_pairs_shortest_path_length(large_graph)\n",
    "d = {x[0]:x[1] for x in path}   \n",
    "plt.hist(d)\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "133be3c5-7f1b-4e7b-ba3c-c52105966f0b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
